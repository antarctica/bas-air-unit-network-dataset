---

include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

variables:
  # CI config
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # tests
  TEST_PATH: test_run
  TEST_GPX: tests/resources/test-network/test-network.gpx
  TEST_OUTPUT: $TEST_PATH/outputs

  # publishing
  PYPI_USER: british-antarctic-survey

cache:
  paths:
    - .cache/pip  # for pipx/pip
    - .venv/   # for project dependencies

image:
  name: python:3.9-slim

stages:
  - 🧪 test
  - 📋 lint
  - 🏗 build
  - 🚚 publish

before_script:
    - apt-get update
    - apt-get install -y tree libxml2-utils
    - python --version
    - python -m pip install --upgrade pip
    - python -m pip install pipx
    - python -m pipx install poetry==1.4.2
    - python -m pipx ensurepath
    - export PATH=$PATH:/root/.local/bin
    - poetry --version
    - poetry check
    - poetry config virtualenvs.in-project true
    - poetry install --no-interaction --no-ansi

test:
  stage: 🧪 test
  needs: []
  script:
    - mkdir -p $TEST_OUTPUT
    - poetry run python tests/create_outputs.py $TEST_GPX $TEST_OUTPUT
    - poetry run python tests/compare_outputs.py $TEST_OUTPUT

  artifacts:
    paths:
      - $TEST_OUTPUT
    expire_in: 1 month
  rules:
    - changes:
        - '**/*.py'

lint:
  stage: 📋 lint
  needs: []
  script:
    - poetry run ruff check src/ tests/
    - poetry run ruff format --check src/ tests/
    - poetry run safety check --full-report --ignore=61601 --ignore=61893 --ignore=62044
  artifacts:
    reports:
      codequality: lint-results.json
  rules:
    - changes:
        - '**/*.py'

build:
  stage: 🏗 build
  needs: []
  script:
    - poetry version 0.0.0
    - poetry build
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  rules:
    -
      if: '$CI_COMMIT_TAG == null'
      changes:
        - '**/*.py'

publish:
  stage: 🚚 publish
  needs:
    - test
    - lint
  script:
    - poetry publish --build --no-interaction --username $PYPI_USER
  rules:
    - if: '$CI_COMMIT_TAG != null'
