---

include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

variables:
  # CI config
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # tests
  TEST_PATH: test_run
  TEST_GPKG: $TEST_PATH/bas-air-unit-network-dataset.gpkg
  TEST_OUTPUT: $TEST_PATH/outputs

cache:
  paths:
    - .cache/pip  # for pipx/pip
    - .venv/   # for project dependencies

image:
  name: python:3.8-slim

stages:
  - üß™ test
  - üìã lint
  - üèó build
  - üöö publish

before_script:
    - apt-get update
    - apt-get install -y tree libxml2-utils
    - python --version
    - python -m pip install --upgrade pip
    - python -m pip install pipx
    - python -m pipx install poetry==1.4.2
    - python -m pipx ensurepath
    - export PATH=$PATH:/root/.local/bin
    - poetry --version
    - poetry check
    - poetry config virtualenvs.in-project true
    - poetry install --no-interaction --no-ansi

test:
  stage: üß™ test
  needs: []
  script:
    - poetry run airnet --help
    - mkdir -p $TEST_OUTPUT
    - poetry run airnet init -d $TEST_PATH
    - poetry run airnet import -d $TEST_GPKG -i tests/resources/test-network/test-network.gpx
    - poetry run airnet inspect -d $TEST_GPKG
    - poetry run airnet export -d $TEST_GPKG -o $TEST_OUTPUT
    - tree $TEST_OUTPUT
    - poetry run python tests/compare_outputs.py $TEST_OUTPUT

  artifacts:
    paths:
      - $TEST_OUTPUT
    expire_in: 1 month
  rules:
    - changes:
        - '**/*.py'

lint:
  stage: üìã lint
  needs: []
  script:
    - poetry run ruff check src/ tests/ --output-format gitlab > lint-results.json
    - poetry run ruff format --check src/ tests/
    - poetry run safety check --full-report --ignore=61601 --ignore=61893 --ignore=62044
  artifacts:
    reports:
      codequality: lint-results.json
  rules:
    - changes:
        - '**/*.py'

build:
  stage: üèó build
  needs: []
  script:
    - poetry version 0.0.0
    - poetry build
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  rules:
    -
      if: '$CI_COMMIT_TAG == null'
      changes:
        - '**/*.py'

publish:
  stage: üöö publish
  needs:
    - test
    - lint
  script:
    - poetry config repositories.gitlab "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/pypi"
    - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN" --local
    - poetry publish --build --no-interaction --repository gitlab
  rules:
    - if: '$CI_COMMIT_TAG != null'
