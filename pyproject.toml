[tool.poetry]
name = "bas-air-unit-network-dataset"
version = "0.2.2"
description = "Utility to process routes and waypoints used by the British Antarctic Survey (BAS) Air Unit"
authors = ["Felix Fennell <felnne@bas.ac.uk>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/antarctica/bas-air-unit-network-dataset"
repository = "https://github.com/antarctica/bas-air-unit-network-dataset"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Environment :: Win32 (MS Windows)",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Utilities"
]

[tool.poetry.scripts]
airnet = "bas_air_unit_network_dataset.cli:cli"

[tool.poetry.dependencies]
python = "^3.8.1"
ulid-py = "^1.1.0"
Shapely = "^1.8.2"
Fiona = "^1.8.21"
gpxpy = "^1.5.0"
importlib-resources = "^5.12.0"
lxml = "^4.9.1"
click = "^8.1.3"

[tool.poetry.group.linting.dependencies]
ruff = "^0.1.6"
safety = "^2.3.5"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = ''


[tool.flake8]
# A:   builtins (variables named after builtin names)
# ANN: annotations
# B:   bug-bear (additional bad code checks)
# B9:  bug-bear opinionated (additional, additional bad code checks)
# BLK: black (code formatting)
# C:   mccabe (code complexity)
# C4:  comprehensions (list/dict/set comprehensions)
# D:   docstrings
# E:   pycodestyle errors (PEP8 checks)
# F:   pyflakes (invalid/bad code checks)
# FS:  use-fstring (f-strings used for text interpolation)
# I:   import order (python import ordering)
# N:   Pep8 naming
# S:   bandit (static security checks)
# W:   pycodestyle warnings (PEP8 checks)
select = ['A','ANN','B','B9','BLK','C','C4','D','E','F','FS','N','I','S','W']

# ANN101: for lack of 'Self' type in Python 3.8 (available 3.11+)
# ANN102: for lack of 'Cls' type in Python 3.8 (available in 3.11+)
# D100:   for avoding module level docstrings
# D104:   for avoding package level docstrings
# D212:   for docstring requring multi-line comments to start on first line (which looks silly)
# D402:   for docstring that can't resemble their signatures (despite them being completely different)
# E203:   for Black compatibility (whitespace before â€˜:')
# E501:   for bug-bear compatibility (as B905 overrides line length checks)
# W503:   for Black compatibility (line break before binary operator)
#####ignore = ['ANN101', 'ANN102', 'D100', 'D104', 'D107', 'D212', 'E203','E501','W503']
# temp ,temp, temp
ignore = ['ANN101', 'ANN102', 'D100', 'D104', 'D107', 'D212', 'D402', 'E203','E501','W503']

# general
max-line-length = 120

# for mccabe
max-complexity = 10

# for flake8-import-order
application-import-names = ['bas_air_unit_network_dataset']
import-order-style = 'smarkets'

# for flake8-docstrings
docstring-convention = 'google'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
